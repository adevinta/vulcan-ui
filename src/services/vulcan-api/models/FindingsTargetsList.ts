/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FindingsTarget } from './FindingsTarget';
import {
    FindingsTargetFromJSON,
    FindingsTargetFromJSONTyped,
    FindingsTargetToJSON,
} from './FindingsTarget';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
} from './Pagination';

/**
 * Findings by Target list (default view)
 * @export
 * @interface FindingsTargetsList
 */
export interface FindingsTargetsList {
    /**
     * 
     * @type {Pagination}
     * @memberof FindingsTargetsList
     */
    pagination?: Pagination;
    /**
     * Findings_targetCollection is the media type for an array of Findings_target (default view)
     * @type {Array<FindingsTarget>}
     * @memberof FindingsTargetsList
     */
    targets?: Array<FindingsTarget>;
}

/**
 * Check if a given object implements the FindingsTargetsList interface.
 */
export function instanceOfFindingsTargetsList(value: object): boolean {
    return true;
}

export function FindingsTargetsListFromJSON(json: any): FindingsTargetsList {
    return FindingsTargetsListFromJSONTyped(json, false);
}

export function FindingsTargetsListFromJSONTyped(json: any, ignoreDiscriminator: boolean): FindingsTargetsList {
    if (json == null) {
        return json;
    }
    return {
        
        'pagination': json['pagination'] == null ? undefined : PaginationFromJSON(json['pagination']),
        'targets': json['targets'] == null ? undefined : ((json['targets'] as Array<any>).map(FindingsTargetFromJSON)),
    };
}

export function FindingsTargetsListToJSON(value?: FindingsTargetsList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'pagination': PaginationToJSON(value['pagination']),
        'targets': value['targets'] == null ? undefined : ((value['targets'] as Array<any>).map(FindingsTargetToJSON)),
    };
}


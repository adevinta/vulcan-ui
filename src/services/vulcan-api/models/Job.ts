/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JobResult } from './JobResult';
import {
    JobResultFromJSON,
    JobResultFromJSONTyped,
    JobResultToJSON,
} from './JobResult';

/**
 * Job (default view)
 * @export
 * @interface Job
 */
export interface Job {
    /**
     * Job ID
     * @type {string}
     * @memberof Job
     */
    id?: string;
    /**
     * Operation that triggered the job
     * @type {string}
     * @memberof Job
     */
    operation?: string;
    /**
     * 
     * @type {JobResult}
     * @memberof Job
     */
    result?: JobResult;
    /**
     * Indicates the status of the operation. The possible values are:
     * 	- 'PENDING': The job has been noted and is pending to be processed
     * 	- 'RUNNING': The job is on execution
     * 	- 'DONE': The job has finished, either successfully or unsuccesfully. Result.error needs to be processed to determine it
     * @type {string}
     * @memberof Job
     */
    status?: string;
    /**
     * Team ID
     * @type {string}
     * @memberof Job
     */
    teamId?: string;
}

/**
 * Check if a given object implements the Job interface.
 */
export function instanceOfJob(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function JobFromJSON(json: any): Job {
    return JobFromJSONTyped(json, false);
}

export function JobFromJSONTyped(json: any, ignoreDiscriminator: boolean): Job {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'result': !exists(json, 'result') ? undefined : JobResultFromJSON(json['result']),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'teamId': !exists(json, 'team_id') ? undefined : json['team_id'],
    };
}

export function JobToJSON(value?: Job | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'operation': value.operation,
        'result': JobResultToJSON(value.result),
        'status': value.status,
        'team_id': value.teamId,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Stats by severity (default view)
 * @export
 * @interface Statstotal
 */
export interface Statstotal {
    /**
     * Stats for critical vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    critical?: number;
    /**
     * Stats for high vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    high?: number;
    /**
     * Stats for informational vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    informational?: number;
    /**
     * Stats for low vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    low?: number;
    /**
     * Stats for medium vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    medium?: number;
    /**
     * Stats for all vulnerabilities
     * @type {number}
     * @memberof Statstotal
     */
    total?: number;
}

/**
 * Check if a given object implements the Statstotal interface.
 */
export function instanceOfStatstotal(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StatstotalFromJSON(json: any): Statstotal {
    return StatstotalFromJSONTyped(json, false);
}

export function StatstotalFromJSONTyped(json: any, ignoreDiscriminator: boolean): Statstotal {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'critical': !exists(json, 'critical') ? undefined : json['critical'],
        'high': !exists(json, 'high') ? undefined : json['high'],
        'informational': !exists(json, 'informational') ? undefined : json['informational'],
        'low': !exists(json, 'low') ? undefined : json['low'],
        'medium': !exists(json, 'medium') ? undefined : json['medium'],
        'total': !exists(json, 'total') ? undefined : json['total'],
    };
}

export function StatstotalToJSON(value?: Statstotal | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'critical': value.critical,
        'high': value.high,
        'informational': value.informational,
        'low': value.low,
        'medium': value.medium,
        'total': value.total,
    };
}


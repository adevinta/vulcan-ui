/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Assettype } from './Assettype';
import {
    AssettypeFromJSON,
    AssettypeFromJSONTyped,
    AssettypeToJSON,
} from './Assettype';

/**
 * Asset (default view)
 * @export
 * @interface Assetresponse
 */
export interface Assetresponse {
    /**
     * Alias
     * @type {string}
     * @memberof Assetresponse
     */
    alias?: string;
    /**
     * Classified At
     * @type {string}
     * @memberof Assetresponse
     */
    classifiedAt?: string;
    /**
     * Environmental CVSS
     * @type {string}
     * @memberof Assetresponse
     */
    environmentalCvss?: string;
    /**
     * Asset ID
     * @type {string}
     * @memberof Assetresponse
     */
    id?: string;
    /**
     * Identifier
     * @type {string}
     * @memberof Assetresponse
     */
    identifier?: string;
    /**
     * Options
     * @type {string}
     * @memberof Assetresponse
     */
    options?: string;
    /**
     * Rolfp plus scope vector
     * @type {string}
     * @memberof Assetresponse
     */
    rolfp?: string;
    /**
     * Scannable
     * @type {boolean}
     * @memberof Assetresponse
     */
    scannable?: boolean;
    /**
     * 
     * @type {Error}
     * @memberof Assetresponse
     */
    status?: Error;
    /**
     * 
     * @type {Assettype}
     * @memberof Assetresponse
     */
    type?: Assettype;
}

/**
 * Check if a given object implements the Assetresponse interface.
 */
export function instanceOfAssetresponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssetresponseFromJSON(json: any): Assetresponse {
    return AssetresponseFromJSONTyped(json, false);
}

export function AssetresponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Assetresponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'classifiedAt': !exists(json, 'classified_at') ? undefined : json['classified_at'],
        'environmentalCvss': !exists(json, 'environmental_cvss') ? undefined : json['environmental_cvss'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'rolfp': !exists(json, 'rolfp') ? undefined : json['rolfp'],
        'scannable': !exists(json, 'scannable') ? undefined : json['scannable'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : AssettypeFromJSON(json['type']),
    };
}

export function AssetresponseToJSON(value?: Assetresponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'classified_at': value.classifiedAt,
        'environmental_cvss': value.environmentalCvss,
        'id': value.id,
        'identifier': value.identifier,
        'options': value.options,
        'rolfp': value.rolfp,
        'scannable': value.scannable,
        'status': value.status,
        'type': AssettypeToJSON(value.type),
    };
}


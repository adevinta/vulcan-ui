/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * source (default view)
 * @export
 * @interface Source
 */
export interface Source {
    /**
     * Source component
     * @type {string}
     * @memberof Source
     */
    component?: string;
    /**
     * Source ID
     * @type {string}
     * @memberof Source
     */
    id?: string;
    /**
     * Source instance ID
     * @type {string}
     * @memberof Source
     */
    instance?: string;
    /**
     * Source name
     * @type {string}
     * @memberof Source
     */
    name?: string;
    /**
     * Source options
     * @type {string}
     * @memberof Source
     */
    options?: string;
    /**
     * Source execution end time
     * @type {string}
     * @memberof Source
     */
    time?: string;
}

/**
 * Check if a given object implements the Source interface.
 */
export function instanceOfSource(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SourceFromJSON(json: any): Source {
    return SourceFromJSONTyped(json, false);
}

export function SourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Source {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'component': !exists(json, 'component') ? undefined : json['component'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'instance': !exists(json, 'instance') ? undefined : json['instance'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'time': !exists(json, 'time') ? undefined : json['time'],
    };
}

export function SourceToJSON(value?: Source | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'component': value.component,
        'id': value.id,
        'instance': value.instance,
        'name': value.name,
        'options': value.options,
        'time': value.time,
    };
}


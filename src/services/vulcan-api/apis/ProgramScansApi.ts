/* tslint:disable */
/* eslint-disable */
/**
 * Vulcan API
 * Public API for Vulcan Vulnerability Scan Engine
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Scan,
} from '../models';
import {
    ScanFromJSON,
    ScanToJSON,
} from '../models';

export interface ProgramScansListRequest {
    programId: string;
    teamId: string;
}

/**
 * 
 */
export class ProgramScansApi extends runtime.BaseAPI {

    /**
     * List the scans of a program.
     * list program-scans
     */
    async programScansListRaw(requestParameters: ProgramScansListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Scan>>> {
        if (requestParameters.programId === null || requestParameters.programId === undefined) {
            throw new runtime.RequiredError('programId','Required parameter requestParameters.programId was null or undefined when calling programScansList.');
        }

        if (requestParameters.teamId === null || requestParameters.teamId === undefined) {
            throw new runtime.RequiredError('teamId','Required parameter requestParameters.teamId was null or undefined when calling programScansList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/teams/{team_id}/programs/{program_id}/scans`.replace(`{${"program_id"}}`, encodeURIComponent(String(requestParameters.programId))).replace(`{${"team_id"}}`, encodeURIComponent(String(requestParameters.teamId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ScanFromJSON));
    }

    /**
     * List the scans of a program.
     * list program-scans
     */
    async programScansList(requestParameters: ProgramScansListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Scan>> {
        const response = await this.programScansListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
